#+TITLE: Desktop config#+PROPERTY: header-args :tangle /home/admin1475963/.config/sway/config* Main variablesModifier key:#+BEGIN_SRC conf-space  set $mod Mod4#+END_SRCVim navigation keys:#+BEGIN_SRC conf-space  set $left h  set $down j  set $up k  set $right l#+END_SRC* Start other apps#+BEGIN_SRC conf-space  exec systemctl --user import-environment  exec dunst &> /tmp/dunst.log  exec kanata $XDG_CONFIG_HOME/kanata/kanata.kbd  exec ydotoold  exec emacs --daemon#+END_SRC* Input#+BEGIN_SRC conf-space  input type:keyboard {        xkb_layout "us,ru,uz"        xkb_model "pc104"        xkb_options "grp:win_space_toggle"  }#+END_SRC* Output#+BEGIN_SRC conf-space  output * bg $WALLPAPERS/current fill#+END_SRC* GUI#+BEGIN_SRC conf-space  default_border normal 2  gaps inner 10#+END_SRC* Compositor management#+BEGIN_SRC conf-space  bindsym --to-code {          $mod+Shift+r reload          $mod+Shift+q exec swaynag \                            -t warning -m 'Do you really want to exit sway?' \                            -B 'Yes, exit sway' \                            'swaymsg exit'  }#+END_SRC* Windows and containers#+BEGIN_SRC conf-space  bindsym --to-code {          $mod+Shift+c kill          $mod+$left focus left          $mod+$down focus down          $mod+$up focus up          $mod+$right focus right          $mod+Left focus left          $mod+Down focus down          $mod+Up focus up          $mod+Right focus right          $mod+Shift+t focus mode_toggle          $mod+p focus parent          $mod+c focus child          $mod+Shift+$left move left          $mod+Shift+$down move down          $mod+Shift+$up move up          $mod+Shift+$right move right          $mod+Shift+Left move left          $mod+Shift+Down move down          $mod+Shift+Up move up          $mod+Shift+Right move right          $mod+f fullscreen          $mod+Shift+f floating toggle  }  floating_modifier $mod normal#+END_SRC** Resizing#+BEGIN_SRC conf-space  mode "resize" {       bindsym --to-code {               $left resize shrink width 10px               $down resize grow height 10px               $up resize shrink height 10px               $right resize grow width 10px               Left resize shrink width 10px               Down resize grow height 10px               Up resize shrink height 10px               Right resize grow width 10px               Return mode "default"               Escape mode "default"       }  }  bindsym --to-code $mod+r mode "resize"#+END_SRC* Workspaces#+BEGIN_SRC conf-space  workspace_layout tabbed  bindsym {          $mod+1 workspace number 1          $mod+2 workspace number 2          $mod+3 workspace number 3          $mod+4 workspace number 4          $mod+5 workspace number 5          $mod+6 workspace number 6          $mod+7 workspace number 7          $mod+8 workspace number 8          $mod+9 workspace number 9          $mod+0 workspace number 10          $mod+Shift+1 move container to workspace number 1          $mod+Shift+2 move container to workspace number 2          $mod+Shift+3 move container to workspace number 3          $mod+Shift+4 move container to workspace number 4          $mod+Shift+5 move container to workspace number 5          $mod+Shift+6 move container to workspace number 6          $mod+Shift+7 move container to workspace number 7          $mod+Shift+8 move container to workspace number 8          $mod+Shift+9 move container to workspace number 9          $mod+Shift+0 move container to workspace number 10  }#+END_SRC* Layouts#+BEGIN_SRC conf-space  bindsym --to-code {          $mod+Shift+y layout stacking          $mod+Shift+u layout tabbed          $mod+Shift+i layout splith          $mod+Shift+o layout splitv  }#+END_SRC* Applications#+BEGIN_SRC conf-space  bindsym --to-code {          $mod+Return exec alacritty          $mod+m      exec bemenu-run | xargs swaymsg exec --          $mod+Ctrl+p exec bash pass.sh          $mod+e      exec emacsclient -c -a 'emacs'          $mod+w      exec bash qutebrowser-launcher.sh          $mod+Ctrl+w exec chromium          $mod+Ctrl+t exec telegram-desktop --          $mod+Ctrl+m exec evolution          $mod+Ctrl+z exec swaylock          $mod+Ctrl+s exec bash -c "grim -g '$(slurp)' $HOME/Pictures/screenshots/$(date +'%F_%T.png')"  }#+END_SRC* Assingns#+BEGIN_SRC conf-space  assign [app_id="emacs"] workspace number 2  assign [class="(E|e)macs"] workspace number 2  assign [app_id="org.kde.okular"] workspace number 3  assign [class="okular"] workspace number 3  assign [app_id="qutebrowser.qutebrowser"] workspace number 4  assign [class="qutebrowser"] workspace number 4  assign [app_id="chromium"] workspace number 4  assign [class="chromium"] workspace number 4  assign [app_id="libreoffice-*"] workspace number 5  assign [app_id="org.inkscape.Inkscape"] workspace number 5  assign [app_id="xournalpp"] workspace number 5  assign [class="Gimp"] workspace number 5  assign [app_id="org.telegram.desktop"] workspace number 6  assign [app_id="evolution"] workspace number 6  assign [app_id="zoom"] workspace number 7  assign [class="zoom"] workspace number 7#+END_SRC* Volume and brightness#+BEGIN_SRC conf-space  bindsym XF86AudioMute exec amixer sset Master toggle  bindsym XF86AudioRaiseVolume exec amixer sset Master 5%+  bindsym XF86AudioLowerVolume exec amixer sset Master 5%-  bindsym XF86MonBrightnessDown exec brightnessctl set 5%-  bindsym XF86MonBrightnessUp exec brightnessctl set 5%+#+END_SRC* Bar#+BEGIN_SRC conf-space  bar {      position top      swaybar_command waybar  }#+END_SRC* XWayland#+begin_src conf-space  xwayland enable#+end_src* Bar script#+BEGIN_SRC sh header-args :tangle /home/admin1475963/.local/bin/bar.sh  keyboard_input_name="1:1:AT_Translated_Set_2_keyboard"  datetime=$(date "+%F %T")  battery_charge=$(upower --show-info $(upower --enumerate | grep 'BAT') | grep "percentage" | awk '{print $2}')  battery_status=$(upower --show-info $(upower --enumerate | grep 'BAT') | grep "state" | awk '{print $2}')  audio_volume=$(amixer sget Master | grep 'Front Left:' | awk '{print $5}')  audio_is_muted=$(amixer sget Master | grep 'Front Left:' | awk '{print $6}')  # Others  language=$(swaymsg -r -t get_inputs | awk '/1:1:AT_Translated_Set_2_keyboard/;/xkb_active_layout_name/' | grep -A1 '\b1:1:AT_Translated_Set_2_keyboard\b' | grep "xkb_active_layout_name" | awk -F '"' '{print $4}')  if [ $battery_status = "discharging" ]  then      battery_pluggedin='âš '  else      battery_pluggedin='âš¡'  fi  if [ $audio_is_muted = '[off]' ]  then      audio_active='ðŸ”‡'  else      audio_active='ðŸ”Š'  fi  echo "âŒ¨ $language | $audio_active $audio_volume | $battery_pluggedin $battery_charge | ðŸ•˜ $datetime"#+END_SRC* Swaylock#+BEGIN_SRC conf-space header-args :tangle /home/admin1475963/.config/swaylock/config  image=$WALLPAPERS/current  scaling=fit  show-keyboard-layout  indicator-radius=70#+END_SRC* i3lock#+BEGIN_SRC sh header-args :tangle /home/admin1475963/.config/i3/i3lock-launcher.sh  B='#00000000'  # blank  C='#ffffff00'  # clear ish  D='#00bbffff'  # default  T='#00bbffff'  # text  W='#ff0000ff'  # wrong  V='#0000ffbb'  # verifying  IMAGE="$WALLPAPERS/current"  i3lock \  --image=$IMAGE --scale \  --insidever-color=$C   \  --ringver-color=$V     \  --insidewrong-color=$C \  --ringwrong-color=$W   \  --inside-color=$B      \  --ring-color=$D        \  --line-color=$B        \  --separator-color=$D   \  --verif-color=$T        \  --wrong-color=$T        \  --time-color=$T        \  --date-color=$T        \  --layout-color=$T      \  --keyhl-color=$W       \  --bshl-color=$W        \  --screen 1            \  --clock               \  --indicator           \  --time-str="%H:%M:%S"  \  --date-str="%d %m %Y" \  --keylayout 1#+END_SRC